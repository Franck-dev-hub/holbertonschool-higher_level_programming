# ----- Function import -----
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# ----- Simple test -----
>>> matrix_divided([[1, 2], [3, 4]], 2)
[[0.5, 1.0], [1.5, 2.0]]

# ----- Float -----
>>> matrix_divided([[1.5, 2.5]], 0.5)
[[3.0, 5.0]]

# ----- Original matrix -----
>>> m = [[2, 4], [6, 8]]
>>> matrix_divided(m, 2)
[[1.0, 2.0], [3.0, 4.0]]
>>> m
[[2, 4], [6, 8]]

# ----- Errors -----
>>> matrix_divided("not a matrix", 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2], [3, "a"]], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2], [3, 4]], "a")
Traceback (most recent call last):
...
TypeError: div must be a number

>>> matrix_divided([[1, 2], [3, 4]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

>>> matrix_divided([[1, 2], [3, 4, 5]], 2)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size
